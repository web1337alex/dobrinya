@mixin col($size, $grid-count){
    flex: 0 0 auto;
    width: calc(#{percentage($size / $grid-count)} - #{$gap-grid});
}

// Определение медиа-выражений для минимальной и максимальной ширины
@mixin media($min-width: null, $max-width: null) {
    @if $min-width != null and $max-width != null {
        @media (min-width: $min-width) and (max-width: $max-width) {
            @content;
        }
    } @else if $min-width != null {
        @media (min-width: $min-width) {
            @content;
        }
    } @else if $max-width != null {
        @media (max-width: $max-width) {
            @content;
        }
    }
}

// Упрощенный миксин для работы с контрольными точками (breakpoints)
@mixin bp($breakpoint-name, $next-breakpoint: null) {
    $min-width: map-get($grid-breakpoints, $breakpoint-name);

    @if $next-breakpoint != null {
        $max-width: map-get($grid-breakpoints, $next-breakpoint) - 1;
        @include media($min-width, $max-width) {
            @content;
        }
    } @else {
        @include media($min-width) {
            @content;
        }
    }
}

@mixin w100{
    width: 100%;
}

@mixin container($container-mw){
    margin: 0 auto;
    width: $container-mw;
    max-width: 100%;
    padding-left: $gap-grid-half;
    padding-right: $gap-grid-half;
}

@mixin row{
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    
    > *{
        width: 100%;
        margin-left: $gap-grid-half;
        margin-right: $gap-grid-half;
    }
}

@mixin defaultcol(){
    flex: 1 0 0%;
}